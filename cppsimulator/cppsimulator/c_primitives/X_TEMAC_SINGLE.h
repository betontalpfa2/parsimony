/******************************************************************************
 * Generated Cpp template for simulation primitives.
 * Author: Benedek Racz
 ******************************************************************************/

#include "NetFlow.h"
#include "sim_types.h"
#include "Primitive.h"

namespace CPrimitives {
	
	class X_TEMAC_SINGLE: public Primitive{

		//Verilog Parameters:
		parameter_string_t LOC;
		parameter_enum_t EMAC_1000BASEX_ENABLE;
		parameter_enum_t EMAC_ADDRFILTER_ENABLE;
		parameter_enum_t EMAC_BYTEPHY;
		parameter_enum_t EMAC_CTRLLENCHECK_DISABLE;
		parameter_string_t EMAC_DCRBASEADDR;
		parameter_enum_t EMAC_GTLOOPBACK;
		parameter_enum_t EMAC_HOST_ENABLE;
		parameter_string_t EMAC_LINKTIMERVAL;
		parameter_enum_t EMAC_LTCHECK_DISABLE;
		parameter_enum_t EMAC_MDIO_ENABLE;
		parameter_enum_t EMAC_MDIO_IGNORE_PHYADZERO;
		parameter_string_t EMAC_PAUSEADDR;
		parameter_enum_t EMAC_PHYINITAUTONEG_ENABLE;
		parameter_enum_t EMAC_PHYISOLATE;
		parameter_enum_t EMAC_PHYLOOPBACKMSB;
		parameter_enum_t EMAC_PHYPOWERDOWN;
		parameter_enum_t EMAC_PHYRESET;
		parameter_enum_t EMAC_RGMII_ENABLE;
		parameter_enum_t EMAC_RX16BITCLIENT_ENABLE;
		parameter_enum_t EMAC_RXFLOWCTRL_ENABLE;
		parameter_enum_t EMAC_RXHALFDUPLEX;
		parameter_enum_t EMAC_RXINBANDFCS_ENABLE;
		parameter_enum_t EMAC_RXJUMBOFRAME_ENABLE;
		parameter_enum_t EMAC_RXRESET;
		parameter_enum_t EMAC_RXVLAN_ENABLE;
		parameter_enum_t EMAC_RX_ENABLE;
		parameter_enum_t EMAC_SGMII_ENABLE;
		parameter_enum_t EMAC_SPEED_LSB;
		parameter_enum_t EMAC_SPEED_MSB;
		parameter_enum_t EMAC_TX16BITCLIENT_ENABLE;
		parameter_enum_t EMAC_TXFLOWCTRL_ENABLE;
		parameter_enum_t EMAC_TXHALFDUPLEX;
		parameter_enum_t EMAC_TXIFGADJUST_ENABLE;
		parameter_enum_t EMAC_TXINBANDFCS_ENABLE;
		parameter_enum_t EMAC_TXJUMBOFRAME_ENABLE;
		parameter_enum_t EMAC_TXRESET;
		parameter_enum_t EMAC_TXVLAN_ENABLE;
		parameter_enum_t EMAC_TX_ENABLE;
		parameter_string_t EMAC_UNICASTADDR;
		parameter_enum_t EMAC_UNIDIRECTION_ENABLE;
		parameter_enum_t EMAC_USECLKEN;
		parameter_string_t SIM_VERSION;
		//Verilog Ports in definition order:
		NetFlow* DCRHOSTDONEIR; // net ID: DCRHOSTDONEIR lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTANINTERRUPT; // net ID: EMACCLIENTANINTERRUPT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXBADFRAME; // net ID: EMACCLIENTRXBADFRAME lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXCLIENTCLKOUT; // net ID: EMACCLIENTRXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXD; // net ID: EMACCLIENTRXD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXDVLD; // net ID: EMACCLIENTRXDVLD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXDVLDMSW; // net ID: EMACCLIENTRXDVLDMSW lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXFRAMEDROP; // net ID: EMACCLIENTRXFRAMEDROP lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXGOODFRAME; // net ID: EMACCLIENTRXGOODFRAME lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXSTATS; // net ID: EMACCLIENTRXSTATS lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXSTATSBYTEVLD; // net ID: EMACCLIENTRXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTRXSTATSVLD; // net ID: EMACCLIENTRXSTATSVLD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXACK; // net ID: EMACCLIENTTXACK lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXCLIENTCLKOUT; // net ID: EMACCLIENTTXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXCOLLISION; // net ID: EMACCLIENTTXCOLLISION lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXRETRANSMIT; // net ID: EMACCLIENTTXRETRANSMIT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXSTATS; // net ID: EMACCLIENTTXSTATS lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXSTATSBYTEVLD; // net ID: EMACCLIENTTXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACCLIENTTXSTATSVLD; // net ID: EMACCLIENTTXSTATSVLD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACDCRACK; // net ID: EMACDCRACK lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACDCRDBUS; // net ID: EMACDCRDBUS lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYENCOMMAALIGN; // net ID: EMACPHYENCOMMAALIGN lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYLOOPBACKMSB; // net ID: EMACPHYLOOPBACKMSB lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYMCLKOUT; // net ID: EMACPHYMCLKOUT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYMDOUT; // net ID: EMACPHYMDOUT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYMDTRI; // net ID: EMACPHYMDTRI lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYMGTRXRESET; // net ID: EMACPHYMGTRXRESET lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYMGTTXRESET; // net ID: EMACPHYMGTTXRESET lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYPOWERDOWN; // net ID: EMACPHYPOWERDOWN lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYSYNCACQSTATUS; // net ID: EMACPHYSYNCACQSTATUS lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXCHARDISPMODE; // net ID: EMACPHYTXCHARDISPMODE lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXCHARDISPVAL; // net ID: EMACPHYTXCHARDISPVAL lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXCHARISK; // net ID: EMACPHYTXCHARISK lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXCLK; // net ID: EMACPHYTXCLK lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXD; // net ID: EMACPHYTXD lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXEN; // net ID: EMACPHYTXEN lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXER; // net ID: EMACPHYTXER lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACPHYTXGMIIMIICLKOUT; // net ID: EMACPHYTXGMIIMIICLKOUT lsb: 0  msb: 0 OUTPUT
		NetFlow* EMACSPEEDIS10100; // net ID: EMACSPEEDIS10100 lsb: 0  msb: 0 OUTPUT
		NetFlow* HOSTMIIMRDY; // net ID: HOSTMIIMRDY lsb: 0  msb: 0 OUTPUT
		NetFlow* HOSTRDDATA; // net ID: HOSTRDDATA lsb: 0  msb: 0 OUTPUT
		NetFlow* CLIENTEMACDCMLOCKED; // net ID: CLIENTEMACDCMLOCKED lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACPAUSEREQ; // net ID: CLIENTEMACPAUSEREQ lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACPAUSEVAL; // net ID: CLIENTEMACPAUSEVAL lsb: 0  msb: 15 INPUT
		NetFlow* CLIENTEMACRXCLIENTCLKIN; // net ID: CLIENTEMACRXCLIENTCLKIN lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACTXCLIENTCLKIN; // net ID: CLIENTEMACTXCLIENTCLKIN lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACTXD; // net ID: CLIENTEMACTXD lsb: 0  msb: 15 INPUT
		NetFlow* CLIENTEMACTXDVLD; // net ID: CLIENTEMACTXDVLD lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACTXDVLDMSW; // net ID: CLIENTEMACTXDVLDMSW lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACTXFIRSTBYTE; // net ID: CLIENTEMACTXFIRSTBYTE lsb: 0  msb: 0 INPUT
		NetFlow* CLIENTEMACTXIFGDELAY; // net ID: CLIENTEMACTXIFGDELAY lsb: 0  msb: 7 INPUT
		NetFlow* CLIENTEMACTXUNDERRUN; // net ID: CLIENTEMACTXUNDERRUN lsb: 0  msb: 0 INPUT
		NetFlow* DCREMACABUS; // net ID: DCREMACABUS lsb: 9  msb: 0 INPUT
		NetFlow* DCREMACCLK; // net ID: DCREMACCLK lsb: 0  msb: 0 INPUT
		NetFlow* DCREMACDBUS; // net ID: DCREMACDBUS lsb: 31  msb: 0 INPUT
		NetFlow* DCREMACENABLE; // net ID: DCREMACENABLE lsb: 0  msb: 0 INPUT
		NetFlow* DCREMACREAD; // net ID: DCREMACREAD lsb: 0  msb: 0 INPUT
		NetFlow* DCREMACWRITE; // net ID: DCREMACWRITE lsb: 0  msb: 0 INPUT
		NetFlow* HOSTADDR; // net ID: HOSTADDR lsb: 0  msb: 9 INPUT
		NetFlow* HOSTCLK; // net ID: HOSTCLK lsb: 0  msb: 0 INPUT
		NetFlow* HOSTMIIMSEL; // net ID: HOSTMIIMSEL lsb: 0  msb: 0 INPUT
		NetFlow* HOSTOPCODE; // net ID: HOSTOPCODE lsb: 0  msb: 1 INPUT
		NetFlow* HOSTREQ; // net ID: HOSTREQ lsb: 0  msb: 0 INPUT
		NetFlow* HOSTWRDATA; // net ID: HOSTWRDATA lsb: 0  msb: 31 INPUT
		NetFlow* PHYEMACCOL; // net ID: PHYEMACCOL lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACCRS; // net ID: PHYEMACCRS lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACGTXCLK; // net ID: PHYEMACGTXCLK lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACMCLKIN; // net ID: PHYEMACMCLKIN lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACMDIN; // net ID: PHYEMACMDIN lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACMIITXCLK; // net ID: PHYEMACMIITXCLK lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACPHYAD; // net ID: PHYEMACPHYAD lsb: 0  msb: 4 INPUT
		NetFlow* PHYEMACRXBUFSTATUS; // net ID: PHYEMACRXBUFSTATUS lsb: 0  msb: 1 INPUT
		NetFlow* PHYEMACRXCHARISCOMMA; // net ID: PHYEMACRXCHARISCOMMA lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXCHARISK; // net ID: PHYEMACRXCHARISK lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXCLK; // net ID: PHYEMACRXCLK lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXCLKCORCNT; // net ID: PHYEMACRXCLKCORCNT lsb: 0  msb: 2 INPUT
		NetFlow* PHYEMACRXD; // net ID: PHYEMACRXD lsb: 0  msb: 7 INPUT
		NetFlow* PHYEMACRXDISPERR; // net ID: PHYEMACRXDISPERR lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXDV; // net ID: PHYEMACRXDV lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXER; // net ID: PHYEMACRXER lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXNOTINTABLE; // net ID: PHYEMACRXNOTINTABLE lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACRXRUNDISP; // net ID: PHYEMACRXRUNDISP lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACSIGNALDET; // net ID: PHYEMACSIGNALDET lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACTXBUFERR; // net ID: PHYEMACTXBUFERR lsb: 0  msb: 0 INPUT
		NetFlow* PHYEMACTXGMIIMIICLKIN; // net ID: PHYEMACTXGMIIMIICLKIN lsb: 0  msb: 0 INPUT
		NetFlow* RESET; // net ID: RESET lsb: 0  msb: 0 INPUT
		
		X_TEMAC_SINGLE(
			const char * name,
			//Verilog Parameters:
			parameter_string_t LOC, // Default: "UNPLACED"
			parameter_enum_t EMAC_1000BASEX_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_ADDRFILTER_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_BYTEPHY, // Default: "FALSE"
			parameter_enum_t EMAC_CTRLLENCHECK_DISABLE, // Default: "FALSE"
			parameter_string_t EMAC_DCRBASEADDR, // Default: 8'h00
			parameter_enum_t EMAC_GTLOOPBACK, // Default: "FALSE"
			parameter_enum_t EMAC_HOST_ENABLE, // Default: "FALSE"
			parameter_string_t EMAC_LINKTIMERVAL, // Default: 9'h000
			parameter_enum_t EMAC_LTCHECK_DISABLE, // Default: "FALSE"
			parameter_enum_t EMAC_MDIO_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_MDIO_IGNORE_PHYADZERO, // Default: "FALSE"
			parameter_string_t EMAC_PAUSEADDR, // Default: 48'h000000000000
			parameter_enum_t EMAC_PHYINITAUTONEG_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_PHYISOLATE, // Default: "FALSE"
			parameter_enum_t EMAC_PHYLOOPBACKMSB, // Default: "FALSE"
			parameter_enum_t EMAC_PHYPOWERDOWN, // Default: "FALSE"
			parameter_enum_t EMAC_PHYRESET, // Default: "FALSE"
			parameter_enum_t EMAC_RGMII_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RX16BITCLIENT_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RXFLOWCTRL_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RXHALFDUPLEX, // Default: "FALSE"
			parameter_enum_t EMAC_RXINBANDFCS_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RXJUMBOFRAME_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RXRESET, // Default: "FALSE"
			parameter_enum_t EMAC_RXVLAN_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_RX_ENABLE, // Default: "TRUE"
			parameter_enum_t EMAC_SGMII_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_SPEED_LSB, // Default: "FALSE"
			parameter_enum_t EMAC_SPEED_MSB, // Default: "FALSE"
			parameter_enum_t EMAC_TX16BITCLIENT_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TXFLOWCTRL_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TXHALFDUPLEX, // Default: "FALSE"
			parameter_enum_t EMAC_TXIFGADJUST_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TXINBANDFCS_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TXJUMBOFRAME_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TXRESET, // Default: "FALSE"
			parameter_enum_t EMAC_TXVLAN_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_TX_ENABLE, // Default: "TRUE"
			parameter_string_t EMAC_UNICASTADDR, // Default: 48'h000000000000
			parameter_enum_t EMAC_UNIDIRECTION_ENABLE, // Default: "FALSE"
			parameter_enum_t EMAC_USECLKEN, // Default: "FALSE"
			parameter_string_t SIM_VERSION, // Default: "1.0"
			//Verilog Ports in definition order:
			NetFlow* DCRHOSTDONEIR, // net ID: DCRHOSTDONEIR lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTANINTERRUPT, // net ID: EMACCLIENTANINTERRUPT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXBADFRAME, // net ID: EMACCLIENTRXBADFRAME lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXCLIENTCLKOUT, // net ID: EMACCLIENTRXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXD, // net ID: EMACCLIENTRXD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXDVLD, // net ID: EMACCLIENTRXDVLD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXDVLDMSW, // net ID: EMACCLIENTRXDVLDMSW lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXFRAMEDROP, // net ID: EMACCLIENTRXFRAMEDROP lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXGOODFRAME, // net ID: EMACCLIENTRXGOODFRAME lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXSTATS, // net ID: EMACCLIENTRXSTATS lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXSTATSBYTEVLD, // net ID: EMACCLIENTRXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTRXSTATSVLD, // net ID: EMACCLIENTRXSTATSVLD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXACK, // net ID: EMACCLIENTTXACK lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXCLIENTCLKOUT, // net ID: EMACCLIENTTXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXCOLLISION, // net ID: EMACCLIENTTXCOLLISION lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXRETRANSMIT, // net ID: EMACCLIENTTXRETRANSMIT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXSTATS, // net ID: EMACCLIENTTXSTATS lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXSTATSBYTEVLD, // net ID: EMACCLIENTTXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACCLIENTTXSTATSVLD, // net ID: EMACCLIENTTXSTATSVLD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACDCRACK, // net ID: EMACDCRACK lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACDCRDBUS, // net ID: EMACDCRDBUS lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYENCOMMAALIGN, // net ID: EMACPHYENCOMMAALIGN lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYLOOPBACKMSB, // net ID: EMACPHYLOOPBACKMSB lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYMCLKOUT, // net ID: EMACPHYMCLKOUT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYMDOUT, // net ID: EMACPHYMDOUT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYMDTRI, // net ID: EMACPHYMDTRI lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYMGTRXRESET, // net ID: EMACPHYMGTRXRESET lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYMGTTXRESET, // net ID: EMACPHYMGTTXRESET lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYPOWERDOWN, // net ID: EMACPHYPOWERDOWN lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYSYNCACQSTATUS, // net ID: EMACPHYSYNCACQSTATUS lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXCHARDISPMODE, // net ID: EMACPHYTXCHARDISPMODE lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXCHARDISPVAL, // net ID: EMACPHYTXCHARDISPVAL lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXCHARISK, // net ID: EMACPHYTXCHARISK lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXCLK, // net ID: EMACPHYTXCLK lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXD, // net ID: EMACPHYTXD lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXEN, // net ID: EMACPHYTXEN lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXER, // net ID: EMACPHYTXER lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACPHYTXGMIIMIICLKOUT, // net ID: EMACPHYTXGMIIMIICLKOUT lsb: 0  msb: 0 OUTPUT
			NetFlow* EMACSPEEDIS10100, // net ID: EMACSPEEDIS10100 lsb: 0  msb: 0 OUTPUT
			NetFlow* HOSTMIIMRDY, // net ID: HOSTMIIMRDY lsb: 0  msb: 0 OUTPUT
			NetFlow* HOSTRDDATA, // net ID: HOSTRDDATA lsb: 0  msb: 0 OUTPUT
			NetFlow* CLIENTEMACDCMLOCKED, // net ID: CLIENTEMACDCMLOCKED lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACPAUSEREQ, // net ID: CLIENTEMACPAUSEREQ lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACPAUSEVAL, // net ID: CLIENTEMACPAUSEVAL lsb: 0  msb: 15 INPUT
			NetFlow* CLIENTEMACRXCLIENTCLKIN, // net ID: CLIENTEMACRXCLIENTCLKIN lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACTXCLIENTCLKIN, // net ID: CLIENTEMACTXCLIENTCLKIN lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACTXD, // net ID: CLIENTEMACTXD lsb: 0  msb: 15 INPUT
			NetFlow* CLIENTEMACTXDVLD, // net ID: CLIENTEMACTXDVLD lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACTXDVLDMSW, // net ID: CLIENTEMACTXDVLDMSW lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACTXFIRSTBYTE, // net ID: CLIENTEMACTXFIRSTBYTE lsb: 0  msb: 0 INPUT
			NetFlow* CLIENTEMACTXIFGDELAY, // net ID: CLIENTEMACTXIFGDELAY lsb: 0  msb: 7 INPUT
			NetFlow* CLIENTEMACTXUNDERRUN, // net ID: CLIENTEMACTXUNDERRUN lsb: 0  msb: 0 INPUT
			NetFlow* DCREMACABUS, // net ID: DCREMACABUS lsb: 9  msb: 0 INPUT
			NetFlow* DCREMACCLK, // net ID: DCREMACCLK lsb: 0  msb: 0 INPUT
			NetFlow* DCREMACDBUS, // net ID: DCREMACDBUS lsb: 31  msb: 0 INPUT
			NetFlow* DCREMACENABLE, // net ID: DCREMACENABLE lsb: 0  msb: 0 INPUT
			NetFlow* DCREMACREAD, // net ID: DCREMACREAD lsb: 0  msb: 0 INPUT
			NetFlow* DCREMACWRITE, // net ID: DCREMACWRITE lsb: 0  msb: 0 INPUT
			NetFlow* HOSTADDR, // net ID: HOSTADDR lsb: 0  msb: 9 INPUT
			NetFlow* HOSTCLK, // net ID: HOSTCLK lsb: 0  msb: 0 INPUT
			NetFlow* HOSTMIIMSEL, // net ID: HOSTMIIMSEL lsb: 0  msb: 0 INPUT
			NetFlow* HOSTOPCODE, // net ID: HOSTOPCODE lsb: 0  msb: 1 INPUT
			NetFlow* HOSTREQ, // net ID: HOSTREQ lsb: 0  msb: 0 INPUT
			NetFlow* HOSTWRDATA, // net ID: HOSTWRDATA lsb: 0  msb: 31 INPUT
			NetFlow* PHYEMACCOL, // net ID: PHYEMACCOL lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACCRS, // net ID: PHYEMACCRS lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACGTXCLK, // net ID: PHYEMACGTXCLK lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACMCLKIN, // net ID: PHYEMACMCLKIN lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACMDIN, // net ID: PHYEMACMDIN lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACMIITXCLK, // net ID: PHYEMACMIITXCLK lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACPHYAD, // net ID: PHYEMACPHYAD lsb: 0  msb: 4 INPUT
			NetFlow* PHYEMACRXBUFSTATUS, // net ID: PHYEMACRXBUFSTATUS lsb: 0  msb: 1 INPUT
			NetFlow* PHYEMACRXCHARISCOMMA, // net ID: PHYEMACRXCHARISCOMMA lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXCHARISK, // net ID: PHYEMACRXCHARISK lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXCLK, // net ID: PHYEMACRXCLK lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXCLKCORCNT, // net ID: PHYEMACRXCLKCORCNT lsb: 0  msb: 2 INPUT
			NetFlow* PHYEMACRXD, // net ID: PHYEMACRXD lsb: 0  msb: 7 INPUT
			NetFlow* PHYEMACRXDISPERR, // net ID: PHYEMACRXDISPERR lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXDV, // net ID: PHYEMACRXDV lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXER, // net ID: PHYEMACRXER lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXNOTINTABLE, // net ID: PHYEMACRXNOTINTABLE lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACRXRUNDISP, // net ID: PHYEMACRXRUNDISP lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACSIGNALDET, // net ID: PHYEMACSIGNALDET lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACTXBUFERR, // net ID: PHYEMACTXBUFERR lsb: 0  msb: 0 INPUT
			NetFlow* PHYEMACTXGMIIMIICLKIN, // net ID: PHYEMACTXGMIIMIICLKIN lsb: 0  msb: 0 INPUT
			NetFlow* RESET // net ID: RESET lsb: 0  msb: 0 INPUT
			):Primitive(name){
			
			// Assign parameters and ports: 
			//Verilog Parameters:
			this->LOC = LOC; // Default: "UNPLACED"
			this->EMAC_1000BASEX_ENABLE = EMAC_1000BASEX_ENABLE; // Default: "FALSE"
			this->EMAC_ADDRFILTER_ENABLE = EMAC_ADDRFILTER_ENABLE; // Default: "FALSE"
			this->EMAC_BYTEPHY = EMAC_BYTEPHY; // Default: "FALSE"
			this->EMAC_CTRLLENCHECK_DISABLE = EMAC_CTRLLENCHECK_DISABLE; // Default: "FALSE"
			this->EMAC_DCRBASEADDR = EMAC_DCRBASEADDR; // Default: 8'h00
			this->EMAC_GTLOOPBACK = EMAC_GTLOOPBACK; // Default: "FALSE"
			this->EMAC_HOST_ENABLE = EMAC_HOST_ENABLE; // Default: "FALSE"
			this->EMAC_LINKTIMERVAL = EMAC_LINKTIMERVAL; // Default: 9'h000
			this->EMAC_LTCHECK_DISABLE = EMAC_LTCHECK_DISABLE; // Default: "FALSE"
			this->EMAC_MDIO_ENABLE = EMAC_MDIO_ENABLE; // Default: "FALSE"
			this->EMAC_MDIO_IGNORE_PHYADZERO = EMAC_MDIO_IGNORE_PHYADZERO; // Default: "FALSE"
			this->EMAC_PAUSEADDR = EMAC_PAUSEADDR; // Default: 48'h000000000000
			this->EMAC_PHYINITAUTONEG_ENABLE = EMAC_PHYINITAUTONEG_ENABLE; // Default: "FALSE"
			this->EMAC_PHYISOLATE = EMAC_PHYISOLATE; // Default: "FALSE"
			this->EMAC_PHYLOOPBACKMSB = EMAC_PHYLOOPBACKMSB; // Default: "FALSE"
			this->EMAC_PHYPOWERDOWN = EMAC_PHYPOWERDOWN; // Default: "FALSE"
			this->EMAC_PHYRESET = EMAC_PHYRESET; // Default: "FALSE"
			this->EMAC_RGMII_ENABLE = EMAC_RGMII_ENABLE; // Default: "FALSE"
			this->EMAC_RX16BITCLIENT_ENABLE = EMAC_RX16BITCLIENT_ENABLE; // Default: "FALSE"
			this->EMAC_RXFLOWCTRL_ENABLE = EMAC_RXFLOWCTRL_ENABLE; // Default: "FALSE"
			this->EMAC_RXHALFDUPLEX = EMAC_RXHALFDUPLEX; // Default: "FALSE"
			this->EMAC_RXINBANDFCS_ENABLE = EMAC_RXINBANDFCS_ENABLE; // Default: "FALSE"
			this->EMAC_RXJUMBOFRAME_ENABLE = EMAC_RXJUMBOFRAME_ENABLE; // Default: "FALSE"
			this->EMAC_RXRESET = EMAC_RXRESET; // Default: "FALSE"
			this->EMAC_RXVLAN_ENABLE = EMAC_RXVLAN_ENABLE; // Default: "FALSE"
			this->EMAC_RX_ENABLE = EMAC_RX_ENABLE; // Default: "TRUE"
			this->EMAC_SGMII_ENABLE = EMAC_SGMII_ENABLE; // Default: "FALSE"
			this->EMAC_SPEED_LSB = EMAC_SPEED_LSB; // Default: "FALSE"
			this->EMAC_SPEED_MSB = EMAC_SPEED_MSB; // Default: "FALSE"
			this->EMAC_TX16BITCLIENT_ENABLE = EMAC_TX16BITCLIENT_ENABLE; // Default: "FALSE"
			this->EMAC_TXFLOWCTRL_ENABLE = EMAC_TXFLOWCTRL_ENABLE; // Default: "FALSE"
			this->EMAC_TXHALFDUPLEX = EMAC_TXHALFDUPLEX; // Default: "FALSE"
			this->EMAC_TXIFGADJUST_ENABLE = EMAC_TXIFGADJUST_ENABLE; // Default: "FALSE"
			this->EMAC_TXINBANDFCS_ENABLE = EMAC_TXINBANDFCS_ENABLE; // Default: "FALSE"
			this->EMAC_TXJUMBOFRAME_ENABLE = EMAC_TXJUMBOFRAME_ENABLE; // Default: "FALSE"
			this->EMAC_TXRESET = EMAC_TXRESET; // Default: "FALSE"
			this->EMAC_TXVLAN_ENABLE = EMAC_TXVLAN_ENABLE; // Default: "FALSE"
			this->EMAC_TX_ENABLE = EMAC_TX_ENABLE; // Default: "TRUE"
			this->EMAC_UNICASTADDR = EMAC_UNICASTADDR; // Default: 48'h000000000000
			this->EMAC_UNIDIRECTION_ENABLE = EMAC_UNIDIRECTION_ENABLE; // Default: "FALSE"
			this->EMAC_USECLKEN = EMAC_USECLKEN; // Default: "FALSE"
			this->SIM_VERSION = SIM_VERSION; // Default: "1.0"
			//Verilog Ports in definition order:
			this->DCRHOSTDONEIR = DCRHOSTDONEIR; // net ID: DCRHOSTDONEIR lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTANINTERRUPT = EMACCLIENTANINTERRUPT; // net ID: EMACCLIENTANINTERRUPT lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXBADFRAME = EMACCLIENTRXBADFRAME; // net ID: EMACCLIENTRXBADFRAME lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXCLIENTCLKOUT = EMACCLIENTRXCLIENTCLKOUT; // net ID: EMACCLIENTRXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXD = EMACCLIENTRXD; // net ID: EMACCLIENTRXD lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXDVLD = EMACCLIENTRXDVLD; // net ID: EMACCLIENTRXDVLD lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXDVLDMSW = EMACCLIENTRXDVLDMSW; // net ID: EMACCLIENTRXDVLDMSW lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXFRAMEDROP = EMACCLIENTRXFRAMEDROP; // net ID: EMACCLIENTRXFRAMEDROP lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXGOODFRAME = EMACCLIENTRXGOODFRAME; // net ID: EMACCLIENTRXGOODFRAME lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXSTATS = EMACCLIENTRXSTATS; // net ID: EMACCLIENTRXSTATS lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXSTATSBYTEVLD = EMACCLIENTRXSTATSBYTEVLD; // net ID: EMACCLIENTRXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTRXSTATSVLD = EMACCLIENTRXSTATSVLD; // net ID: EMACCLIENTRXSTATSVLD lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXACK = EMACCLIENTTXACK; // net ID: EMACCLIENTTXACK lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXCLIENTCLKOUT = EMACCLIENTTXCLIENTCLKOUT; // net ID: EMACCLIENTTXCLIENTCLKOUT lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXCOLLISION = EMACCLIENTTXCOLLISION; // net ID: EMACCLIENTTXCOLLISION lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXRETRANSMIT = EMACCLIENTTXRETRANSMIT; // net ID: EMACCLIENTTXRETRANSMIT lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXSTATS = EMACCLIENTTXSTATS; // net ID: EMACCLIENTTXSTATS lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXSTATSBYTEVLD = EMACCLIENTTXSTATSBYTEVLD; // net ID: EMACCLIENTTXSTATSBYTEVLD lsb: 0  msb: 0 OUTPUT
			this->EMACCLIENTTXSTATSVLD = EMACCLIENTTXSTATSVLD; // net ID: EMACCLIENTTXSTATSVLD lsb: 0  msb: 0 OUTPUT
			this->EMACDCRACK = EMACDCRACK; // net ID: EMACDCRACK lsb: 0  msb: 0 OUTPUT
			this->EMACDCRDBUS = EMACDCRDBUS; // net ID: EMACDCRDBUS lsb: 0  msb: 0 OUTPUT
			this->EMACPHYENCOMMAALIGN = EMACPHYENCOMMAALIGN; // net ID: EMACPHYENCOMMAALIGN lsb: 0  msb: 0 OUTPUT
			this->EMACPHYLOOPBACKMSB = EMACPHYLOOPBACKMSB; // net ID: EMACPHYLOOPBACKMSB lsb: 0  msb: 0 OUTPUT
			this->EMACPHYMCLKOUT = EMACPHYMCLKOUT; // net ID: EMACPHYMCLKOUT lsb: 0  msb: 0 OUTPUT
			this->EMACPHYMDOUT = EMACPHYMDOUT; // net ID: EMACPHYMDOUT lsb: 0  msb: 0 OUTPUT
			this->EMACPHYMDTRI = EMACPHYMDTRI; // net ID: EMACPHYMDTRI lsb: 0  msb: 0 OUTPUT
			this->EMACPHYMGTRXRESET = EMACPHYMGTRXRESET; // net ID: EMACPHYMGTRXRESET lsb: 0  msb: 0 OUTPUT
			this->EMACPHYMGTTXRESET = EMACPHYMGTTXRESET; // net ID: EMACPHYMGTTXRESET lsb: 0  msb: 0 OUTPUT
			this->EMACPHYPOWERDOWN = EMACPHYPOWERDOWN; // net ID: EMACPHYPOWERDOWN lsb: 0  msb: 0 OUTPUT
			this->EMACPHYSYNCACQSTATUS = EMACPHYSYNCACQSTATUS; // net ID: EMACPHYSYNCACQSTATUS lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXCHARDISPMODE = EMACPHYTXCHARDISPMODE; // net ID: EMACPHYTXCHARDISPMODE lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXCHARDISPVAL = EMACPHYTXCHARDISPVAL; // net ID: EMACPHYTXCHARDISPVAL lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXCHARISK = EMACPHYTXCHARISK; // net ID: EMACPHYTXCHARISK lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXCLK = EMACPHYTXCLK; // net ID: EMACPHYTXCLK lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXD = EMACPHYTXD; // net ID: EMACPHYTXD lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXEN = EMACPHYTXEN; // net ID: EMACPHYTXEN lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXER = EMACPHYTXER; // net ID: EMACPHYTXER lsb: 0  msb: 0 OUTPUT
			this->EMACPHYTXGMIIMIICLKOUT = EMACPHYTXGMIIMIICLKOUT; // net ID: EMACPHYTXGMIIMIICLKOUT lsb: 0  msb: 0 OUTPUT
			this->EMACSPEEDIS10100 = EMACSPEEDIS10100; // net ID: EMACSPEEDIS10100 lsb: 0  msb: 0 OUTPUT
			this->HOSTMIIMRDY = HOSTMIIMRDY; // net ID: HOSTMIIMRDY lsb: 0  msb: 0 OUTPUT
			this->HOSTRDDATA = HOSTRDDATA; // net ID: HOSTRDDATA lsb: 0  msb: 0 OUTPUT
			this->CLIENTEMACDCMLOCKED = CLIENTEMACDCMLOCKED; // net ID: CLIENTEMACDCMLOCKED lsb: 0  msb: 0 INPUT
			this->CLIENTEMACPAUSEREQ = CLIENTEMACPAUSEREQ; // net ID: CLIENTEMACPAUSEREQ lsb: 0  msb: 0 INPUT
			this->CLIENTEMACPAUSEVAL = CLIENTEMACPAUSEVAL; // net ID: CLIENTEMACPAUSEVAL lsb: 0  msb: 15 INPUT
			this->CLIENTEMACRXCLIENTCLKIN = CLIENTEMACRXCLIENTCLKIN; // net ID: CLIENTEMACRXCLIENTCLKIN lsb: 0  msb: 0 INPUT
			this->CLIENTEMACTXCLIENTCLKIN = CLIENTEMACTXCLIENTCLKIN; // net ID: CLIENTEMACTXCLIENTCLKIN lsb: 0  msb: 0 INPUT
			this->CLIENTEMACTXD = CLIENTEMACTXD; // net ID: CLIENTEMACTXD lsb: 0  msb: 15 INPUT
			this->CLIENTEMACTXDVLD = CLIENTEMACTXDVLD; // net ID: CLIENTEMACTXDVLD lsb: 0  msb: 0 INPUT
			this->CLIENTEMACTXDVLDMSW = CLIENTEMACTXDVLDMSW; // net ID: CLIENTEMACTXDVLDMSW lsb: 0  msb: 0 INPUT
			this->CLIENTEMACTXFIRSTBYTE = CLIENTEMACTXFIRSTBYTE; // net ID: CLIENTEMACTXFIRSTBYTE lsb: 0  msb: 0 INPUT
			this->CLIENTEMACTXIFGDELAY = CLIENTEMACTXIFGDELAY; // net ID: CLIENTEMACTXIFGDELAY lsb: 0  msb: 7 INPUT
			this->CLIENTEMACTXUNDERRUN = CLIENTEMACTXUNDERRUN; // net ID: CLIENTEMACTXUNDERRUN lsb: 0  msb: 0 INPUT
			this->DCREMACABUS = DCREMACABUS; // net ID: DCREMACABUS lsb: 9  msb: 0 INPUT
			this->DCREMACCLK = DCREMACCLK; // net ID: DCREMACCLK lsb: 0  msb: 0 INPUT
			this->DCREMACDBUS = DCREMACDBUS; // net ID: DCREMACDBUS lsb: 31  msb: 0 INPUT
			this->DCREMACENABLE = DCREMACENABLE; // net ID: DCREMACENABLE lsb: 0  msb: 0 INPUT
			this->DCREMACREAD = DCREMACREAD; // net ID: DCREMACREAD lsb: 0  msb: 0 INPUT
			this->DCREMACWRITE = DCREMACWRITE; // net ID: DCREMACWRITE lsb: 0  msb: 0 INPUT
			this->HOSTADDR = HOSTADDR; // net ID: HOSTADDR lsb: 0  msb: 9 INPUT
			this->HOSTCLK = HOSTCLK; // net ID: HOSTCLK lsb: 0  msb: 0 INPUT
			this->HOSTMIIMSEL = HOSTMIIMSEL; // net ID: HOSTMIIMSEL lsb: 0  msb: 0 INPUT
			this->HOSTOPCODE = HOSTOPCODE; // net ID: HOSTOPCODE lsb: 0  msb: 1 INPUT
			this->HOSTREQ = HOSTREQ; // net ID: HOSTREQ lsb: 0  msb: 0 INPUT
			this->HOSTWRDATA = HOSTWRDATA; // net ID: HOSTWRDATA lsb: 0  msb: 31 INPUT
			this->PHYEMACCOL = PHYEMACCOL; // net ID: PHYEMACCOL lsb: 0  msb: 0 INPUT
			this->PHYEMACCRS = PHYEMACCRS; // net ID: PHYEMACCRS lsb: 0  msb: 0 INPUT
			this->PHYEMACGTXCLK = PHYEMACGTXCLK; // net ID: PHYEMACGTXCLK lsb: 0  msb: 0 INPUT
			this->PHYEMACMCLKIN = PHYEMACMCLKIN; // net ID: PHYEMACMCLKIN lsb: 0  msb: 0 INPUT
			this->PHYEMACMDIN = PHYEMACMDIN; // net ID: PHYEMACMDIN lsb: 0  msb: 0 INPUT
			this->PHYEMACMIITXCLK = PHYEMACMIITXCLK; // net ID: PHYEMACMIITXCLK lsb: 0  msb: 0 INPUT
			this->PHYEMACPHYAD = PHYEMACPHYAD; // net ID: PHYEMACPHYAD lsb: 0  msb: 4 INPUT
			this->PHYEMACRXBUFSTATUS = PHYEMACRXBUFSTATUS; // net ID: PHYEMACRXBUFSTATUS lsb: 0  msb: 1 INPUT
			this->PHYEMACRXCHARISCOMMA = PHYEMACRXCHARISCOMMA; // net ID: PHYEMACRXCHARISCOMMA lsb: 0  msb: 0 INPUT
			this->PHYEMACRXCHARISK = PHYEMACRXCHARISK; // net ID: PHYEMACRXCHARISK lsb: 0  msb: 0 INPUT
			this->PHYEMACRXCLK = PHYEMACRXCLK; // net ID: PHYEMACRXCLK lsb: 0  msb: 0 INPUT
			this->PHYEMACRXCLKCORCNT = PHYEMACRXCLKCORCNT; // net ID: PHYEMACRXCLKCORCNT lsb: 0  msb: 2 INPUT
			this->PHYEMACRXD = PHYEMACRXD; // net ID: PHYEMACRXD lsb: 0  msb: 7 INPUT
			this->PHYEMACRXDISPERR = PHYEMACRXDISPERR; // net ID: PHYEMACRXDISPERR lsb: 0  msb: 0 INPUT
			this->PHYEMACRXDV = PHYEMACRXDV; // net ID: PHYEMACRXDV lsb: 0  msb: 0 INPUT
			this->PHYEMACRXER = PHYEMACRXER; // net ID: PHYEMACRXER lsb: 0  msb: 0 INPUT
			this->PHYEMACRXNOTINTABLE = PHYEMACRXNOTINTABLE; // net ID: PHYEMACRXNOTINTABLE lsb: 0  msb: 0 INPUT
			this->PHYEMACRXRUNDISP = PHYEMACRXRUNDISP; // net ID: PHYEMACRXRUNDISP lsb: 0  msb: 0 INPUT
			this->PHYEMACSIGNALDET = PHYEMACSIGNALDET; // net ID: PHYEMACSIGNALDET lsb: 0  msb: 0 INPUT
			this->PHYEMACTXBUFERR = PHYEMACTXBUFERR; // net ID: PHYEMACTXBUFERR lsb: 0  msb: 0 INPUT
			this->PHYEMACTXGMIIMIICLKIN = PHYEMACTXGMIIMIICLKIN; // net ID: PHYEMACTXGMIIMIICLKIN lsb: 0  msb: 0 INPUT
			this->RESET = RESET; // net ID: RESET lsb: 0  msb: 0 INPUT
			
			register_wait_on_event_nets();
			
		}
		
		void register_wait_on_event_nets(){
		// TODO
		}
		void calculate(int time){
		// TODO
		}
		};
		


}
