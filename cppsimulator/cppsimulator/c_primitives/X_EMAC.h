/******************************************************************************
 * Generated Cpp template for simulation primitives.
 * Author: Benedek Racz
 ******************************************************************************/

#include "NetFlow.h"
#include "sim_types.h"

namespace CPrimitives {

	class X_EMAC{

		//Verilog Parameters:
		parameter_string_t LOC;
		//Verilog Ports in definition order:
		NetFlow* DCRHOSTDONEIR; // OUTPUT
		NetFlow* EMAC0CLIENTANINTERRUPT; // OUTPUT
		NetFlow* EMAC0CLIENTRXBADFRAME; // OUTPUT
		NetFlow* EMAC0CLIENTRXCLIENTCLKOUT; // OUTPUT
		NetFlow* EMAC0CLIENTRXD; // OUTPUT
		NetFlow* EMAC0CLIENTRXDVLD; // OUTPUT
		NetFlow* EMAC0CLIENTRXDVLDMSW; // OUTPUT
		NetFlow* EMAC0CLIENTRXDVREG6; // OUTPUT
		NetFlow* EMAC0CLIENTRXFRAMEDROP; // OUTPUT
		NetFlow* EMAC0CLIENTRXGOODFRAME; // OUTPUT
		NetFlow* EMAC0CLIENTRXSTATS; // OUTPUT
		NetFlow* EMAC0CLIENTRXSTATSBYTEVLD; // OUTPUT
		NetFlow* EMAC0CLIENTRXSTATSVLD; // OUTPUT
		NetFlow* EMAC0CLIENTTXACK; // OUTPUT
		NetFlow* EMAC0CLIENTTXCLIENTCLKOUT; // OUTPUT
		NetFlow* EMAC0CLIENTTXCOLLISION; // OUTPUT
		NetFlow* EMAC0CLIENTTXGMIIMIICLKOUT; // OUTPUT
		NetFlow* EMAC0CLIENTTXRETRANSMIT; // OUTPUT
		NetFlow* EMAC0CLIENTTXSTATS; // OUTPUT
		NetFlow* EMAC0CLIENTTXSTATSBYTEVLD; // OUTPUT
		NetFlow* EMAC0CLIENTTXSTATSVLD; // OUTPUT
		NetFlow* EMAC0PHYENCOMMAALIGN; // OUTPUT
		NetFlow* EMAC0PHYLOOPBACKMSB; // OUTPUT
		NetFlow* EMAC0PHYMCLKOUT; // OUTPUT
		NetFlow* EMAC0PHYMDOUT; // OUTPUT
		NetFlow* EMAC0PHYMDTRI; // OUTPUT
		NetFlow* EMAC0PHYMGTRXRESET; // OUTPUT
		NetFlow* EMAC0PHYMGTTXRESET; // OUTPUT
		NetFlow* EMAC0PHYPOWERDOWN; // OUTPUT
		NetFlow* EMAC0PHYSYNCACQSTATUS; // OUTPUT
		NetFlow* EMAC0PHYTXCHARDISPMODE; // OUTPUT
		NetFlow* EMAC0PHYTXCHARDISPVAL; // OUTPUT
		NetFlow* EMAC0PHYTXCHARISK; // OUTPUT
		NetFlow* EMAC0PHYTXCLK; // OUTPUT
		NetFlow* EMAC0PHYTXD; // OUTPUT
		NetFlow* EMAC0PHYTXEN; // OUTPUT
		NetFlow* EMAC0PHYTXER; // OUTPUT
		NetFlow* EMAC1CLIENTANINTERRUPT; // OUTPUT
		NetFlow* EMAC1CLIENTRXBADFRAME; // OUTPUT
		NetFlow* EMAC1CLIENTRXCLIENTCLKOUT; // OUTPUT
		NetFlow* EMAC1CLIENTRXD; // OUTPUT
		NetFlow* EMAC1CLIENTRXDVLD; // OUTPUT
		NetFlow* EMAC1CLIENTRXDVLDMSW; // OUTPUT
		NetFlow* EMAC1CLIENTRXDVREG6; // OUTPUT
		NetFlow* EMAC1CLIENTRXFRAMEDROP; // OUTPUT
		NetFlow* EMAC1CLIENTRXGOODFRAME; // OUTPUT
		NetFlow* EMAC1CLIENTRXSTATS; // OUTPUT
		NetFlow* EMAC1CLIENTRXSTATSBYTEVLD; // OUTPUT
		NetFlow* EMAC1CLIENTRXSTATSVLD; // OUTPUT
		NetFlow* EMAC1CLIENTTXACK; // OUTPUT
		NetFlow* EMAC1CLIENTTXCLIENTCLKOUT; // OUTPUT
		NetFlow* EMAC1CLIENTTXCOLLISION; // OUTPUT
		NetFlow* EMAC1CLIENTTXGMIIMIICLKOUT; // OUTPUT
		NetFlow* EMAC1CLIENTTXRETRANSMIT; // OUTPUT
		NetFlow* EMAC1CLIENTTXSTATS; // OUTPUT
		NetFlow* EMAC1CLIENTTXSTATSBYTEVLD; // OUTPUT
		NetFlow* EMAC1CLIENTTXSTATSVLD; // OUTPUT
		NetFlow* EMAC1PHYENCOMMAALIGN; // OUTPUT
		NetFlow* EMAC1PHYLOOPBACKMSB; // OUTPUT
		NetFlow* EMAC1PHYMCLKOUT; // OUTPUT
		NetFlow* EMAC1PHYMDOUT; // OUTPUT
		NetFlow* EMAC1PHYMDTRI; // OUTPUT
		NetFlow* EMAC1PHYMGTRXRESET; // OUTPUT
		NetFlow* EMAC1PHYMGTTXRESET; // OUTPUT
		NetFlow* EMAC1PHYPOWERDOWN; // OUTPUT
		NetFlow* EMAC1PHYSYNCACQSTATUS; // OUTPUT
		NetFlow* EMAC1PHYTXCHARDISPMODE; // OUTPUT
		NetFlow* EMAC1PHYTXCHARDISPVAL; // OUTPUT
		NetFlow* EMAC1PHYTXCHARISK; // OUTPUT
		NetFlow* EMAC1PHYTXCLK; // OUTPUT
		NetFlow* EMAC1PHYTXD; // OUTPUT
		NetFlow* EMAC1PHYTXEN; // OUTPUT
		NetFlow* EMAC1PHYTXER; // OUTPUT
		NetFlow* EMACDCRACK; // OUTPUT
		NetFlow* EMACDCRDBUS; // OUTPUT
		NetFlow* HOSTMIIMRDY; // OUTPUT
		NetFlow* HOSTRDDATA; // OUTPUT
		NetFlow* CLIENTEMAC0DCMLOCKED; // INPUT
		NetFlow* CLIENTEMAC0PAUSEREQ; // INPUT
		NetFlow* CLIENTEMAC0PAUSEVAL; // INPUT
		NetFlow* CLIENTEMAC0RXCLIENTCLKIN; // INPUT
		NetFlow* CLIENTEMAC0TXCLIENTCLKIN; // INPUT
		NetFlow* CLIENTEMAC0TXD; // INPUT
		NetFlow* CLIENTEMAC0TXDVLD; // INPUT
		NetFlow* CLIENTEMAC0TXDVLDMSW; // INPUT
		NetFlow* CLIENTEMAC0TXFIRSTBYTE; // INPUT
		NetFlow* CLIENTEMAC0TXGMIIMIICLKIN; // INPUT
		NetFlow* CLIENTEMAC0TXIFGDELAY; // INPUT
		NetFlow* CLIENTEMAC0TXUNDERRUN; // INPUT
		NetFlow* CLIENTEMAC1DCMLOCKED; // INPUT
		NetFlow* CLIENTEMAC1PAUSEREQ; // INPUT
		NetFlow* CLIENTEMAC1PAUSEVAL; // INPUT
		NetFlow* CLIENTEMAC1RXCLIENTCLKIN; // INPUT
		NetFlow* CLIENTEMAC1TXCLIENTCLKIN; // INPUT
		NetFlow* CLIENTEMAC1TXD; // INPUT
		NetFlow* CLIENTEMAC1TXDVLD; // INPUT
		NetFlow* CLIENTEMAC1TXDVLDMSW; // INPUT
		NetFlow* CLIENTEMAC1TXFIRSTBYTE; // INPUT
		NetFlow* CLIENTEMAC1TXGMIIMIICLKIN; // INPUT
		NetFlow* CLIENTEMAC1TXIFGDELAY; // INPUT
		NetFlow* CLIENTEMAC1TXUNDERRUN; // INPUT
		NetFlow* DCREMACABUS; // INPUT
		NetFlow* DCREMACCLK; // INPUT
		NetFlow* DCREMACDBUS; // INPUT
		NetFlow* DCREMACENABLE; // INPUT
		NetFlow* DCREMACREAD; // INPUT
		NetFlow* DCREMACWRITE; // INPUT
		NetFlow* HOSTADDR; // INPUT
		NetFlow* HOSTCLK; // INPUT
		NetFlow* HOSTEMAC1SEL; // INPUT
		NetFlow* HOSTMIIMSEL; // INPUT
		NetFlow* HOSTOPCODE; // INPUT
		NetFlow* HOSTREQ; // INPUT
		NetFlow* HOSTWRDATA; // INPUT
		NetFlow* PHYEMAC0COL; // INPUT
		NetFlow* PHYEMAC0CRS; // INPUT
		NetFlow* PHYEMAC0GTXCLK; // INPUT
		NetFlow* PHYEMAC0MCLKIN; // INPUT
		NetFlow* PHYEMAC0MDIN; // INPUT
		NetFlow* PHYEMAC0MIITXCLK; // INPUT
		NetFlow* PHYEMAC0PHYAD; // INPUT
		NetFlow* PHYEMAC0RXBUFERR; // INPUT
		NetFlow* PHYEMAC0RXBUFSTATUS; // INPUT
		NetFlow* PHYEMAC0RXCHARISCOMMA; // INPUT
		NetFlow* PHYEMAC0RXCHARISK; // INPUT
		NetFlow* PHYEMAC0RXCHECKINGCRC; // INPUT
		NetFlow* PHYEMAC0RXCLK; // INPUT
		NetFlow* PHYEMAC0RXCLKCORCNT; // INPUT
		NetFlow* PHYEMAC0RXCOMMADET; // INPUT
		NetFlow* PHYEMAC0RXD; // INPUT
		NetFlow* PHYEMAC0RXDISPERR; // INPUT
		NetFlow* PHYEMAC0RXDV; // INPUT
		NetFlow* PHYEMAC0RXER; // INPUT
		NetFlow* PHYEMAC0RXLOSSOFSYNC; // INPUT
		NetFlow* PHYEMAC0RXNOTINTABLE; // INPUT
		NetFlow* PHYEMAC0RXRUNDISP; // INPUT
		NetFlow* PHYEMAC0SIGNALDET; // INPUT
		NetFlow* PHYEMAC0TXBUFERR; // INPUT
		NetFlow* PHYEMAC1COL; // INPUT
		NetFlow* PHYEMAC1CRS; // INPUT
		NetFlow* PHYEMAC1GTXCLK; // INPUT
		NetFlow* PHYEMAC1MCLKIN; // INPUT
		NetFlow* PHYEMAC1MDIN; // INPUT
		NetFlow* PHYEMAC1MIITXCLK; // INPUT
		NetFlow* PHYEMAC1PHYAD; // INPUT
		NetFlow* PHYEMAC1RXBUFERR; // INPUT
		NetFlow* PHYEMAC1RXBUFSTATUS; // INPUT
		NetFlow* PHYEMAC1RXCHARISCOMMA; // INPUT
		NetFlow* PHYEMAC1RXCHARISK; // INPUT
		NetFlow* PHYEMAC1RXCHECKINGCRC; // INPUT
		NetFlow* PHYEMAC1RXCLK; // INPUT
		NetFlow* PHYEMAC1RXCLKCORCNT; // INPUT
		NetFlow* PHYEMAC1RXCOMMADET; // INPUT
		NetFlow* PHYEMAC1RXD; // INPUT
		NetFlow* PHYEMAC1RXDISPERR; // INPUT
		NetFlow* PHYEMAC1RXDV; // INPUT
		NetFlow* PHYEMAC1RXER; // INPUT
		NetFlow* PHYEMAC1RXLOSSOFSYNC; // INPUT
		NetFlow* PHYEMAC1RXNOTINTABLE; // INPUT
		NetFlow* PHYEMAC1RXRUNDISP; // INPUT
		NetFlow* PHYEMAC1SIGNALDET; // INPUT
		NetFlow* PHYEMAC1TXBUFERR; // INPUT
		NetFlow* RESET; // INPUT
		NetFlow* TIEEMAC0CONFIGVEC; // INPUT
		NetFlow* TIEEMAC0UNICASTADDR; // INPUT
		NetFlow* TIEEMAC1CONFIGVEC; // INPUT
		NetFlow* TIEEMAC1UNICASTADDR; // INPUT
		
	
		X_EMAC(
			//Verilog Parameters:
			parameter_string_t LOC, // Default: "UNPLACED"
			//Verilog Ports in definition order:
			NetFlow* DCRHOSTDONEIR, // OUTPUT
			NetFlow* EMAC0CLIENTANINTERRUPT, // OUTPUT
			NetFlow* EMAC0CLIENTRXBADFRAME, // OUTPUT
			NetFlow* EMAC0CLIENTRXCLIENTCLKOUT, // OUTPUT
			NetFlow* EMAC0CLIENTRXD, // OUTPUT
			NetFlow* EMAC0CLIENTRXDVLD, // OUTPUT
			NetFlow* EMAC0CLIENTRXDVLDMSW, // OUTPUT
			NetFlow* EMAC0CLIENTRXDVREG6, // OUTPUT
			NetFlow* EMAC0CLIENTRXFRAMEDROP, // OUTPUT
			NetFlow* EMAC0CLIENTRXGOODFRAME, // OUTPUT
			NetFlow* EMAC0CLIENTRXSTATS, // OUTPUT
			NetFlow* EMAC0CLIENTRXSTATSBYTEVLD, // OUTPUT
			NetFlow* EMAC0CLIENTRXSTATSVLD, // OUTPUT
			NetFlow* EMAC0CLIENTTXACK, // OUTPUT
			NetFlow* EMAC0CLIENTTXCLIENTCLKOUT, // OUTPUT
			NetFlow* EMAC0CLIENTTXCOLLISION, // OUTPUT
			NetFlow* EMAC0CLIENTTXGMIIMIICLKOUT, // OUTPUT
			NetFlow* EMAC0CLIENTTXRETRANSMIT, // OUTPUT
			NetFlow* EMAC0CLIENTTXSTATS, // OUTPUT
			NetFlow* EMAC0CLIENTTXSTATSBYTEVLD, // OUTPUT
			NetFlow* EMAC0CLIENTTXSTATSVLD, // OUTPUT
			NetFlow* EMAC0PHYENCOMMAALIGN, // OUTPUT
			NetFlow* EMAC0PHYLOOPBACKMSB, // OUTPUT
			NetFlow* EMAC0PHYMCLKOUT, // OUTPUT
			NetFlow* EMAC0PHYMDOUT, // OUTPUT
			NetFlow* EMAC0PHYMDTRI, // OUTPUT
			NetFlow* EMAC0PHYMGTRXRESET, // OUTPUT
			NetFlow* EMAC0PHYMGTTXRESET, // OUTPUT
			NetFlow* EMAC0PHYPOWERDOWN, // OUTPUT
			NetFlow* EMAC0PHYSYNCACQSTATUS, // OUTPUT
			NetFlow* EMAC0PHYTXCHARDISPMODE, // OUTPUT
			NetFlow* EMAC0PHYTXCHARDISPVAL, // OUTPUT
			NetFlow* EMAC0PHYTXCHARISK, // OUTPUT
			NetFlow* EMAC0PHYTXCLK, // OUTPUT
			NetFlow* EMAC0PHYTXD, // OUTPUT
			NetFlow* EMAC0PHYTXEN, // OUTPUT
			NetFlow* EMAC0PHYTXER, // OUTPUT
			NetFlow* EMAC1CLIENTANINTERRUPT, // OUTPUT
			NetFlow* EMAC1CLIENTRXBADFRAME, // OUTPUT
			NetFlow* EMAC1CLIENTRXCLIENTCLKOUT, // OUTPUT
			NetFlow* EMAC1CLIENTRXD, // OUTPUT
			NetFlow* EMAC1CLIENTRXDVLD, // OUTPUT
			NetFlow* EMAC1CLIENTRXDVLDMSW, // OUTPUT
			NetFlow* EMAC1CLIENTRXDVREG6, // OUTPUT
			NetFlow* EMAC1CLIENTRXFRAMEDROP, // OUTPUT
			NetFlow* EMAC1CLIENTRXGOODFRAME, // OUTPUT
			NetFlow* EMAC1CLIENTRXSTATS, // OUTPUT
			NetFlow* EMAC1CLIENTRXSTATSBYTEVLD, // OUTPUT
			NetFlow* EMAC1CLIENTRXSTATSVLD, // OUTPUT
			NetFlow* EMAC1CLIENTTXACK, // OUTPUT
			NetFlow* EMAC1CLIENTTXCLIENTCLKOUT, // OUTPUT
			NetFlow* EMAC1CLIENTTXCOLLISION, // OUTPUT
			NetFlow* EMAC1CLIENTTXGMIIMIICLKOUT, // OUTPUT
			NetFlow* EMAC1CLIENTTXRETRANSMIT, // OUTPUT
			NetFlow* EMAC1CLIENTTXSTATS, // OUTPUT
			NetFlow* EMAC1CLIENTTXSTATSBYTEVLD, // OUTPUT
			NetFlow* EMAC1CLIENTTXSTATSVLD, // OUTPUT
			NetFlow* EMAC1PHYENCOMMAALIGN, // OUTPUT
			NetFlow* EMAC1PHYLOOPBACKMSB, // OUTPUT
			NetFlow* EMAC1PHYMCLKOUT, // OUTPUT
			NetFlow* EMAC1PHYMDOUT, // OUTPUT
			NetFlow* EMAC1PHYMDTRI, // OUTPUT
			NetFlow* EMAC1PHYMGTRXRESET, // OUTPUT
			NetFlow* EMAC1PHYMGTTXRESET, // OUTPUT
			NetFlow* EMAC1PHYPOWERDOWN, // OUTPUT
			NetFlow* EMAC1PHYSYNCACQSTATUS, // OUTPUT
			NetFlow* EMAC1PHYTXCHARDISPMODE, // OUTPUT
			NetFlow* EMAC1PHYTXCHARDISPVAL, // OUTPUT
			NetFlow* EMAC1PHYTXCHARISK, // OUTPUT
			NetFlow* EMAC1PHYTXCLK, // OUTPUT
			NetFlow* EMAC1PHYTXD, // OUTPUT
			NetFlow* EMAC1PHYTXEN, // OUTPUT
			NetFlow* EMAC1PHYTXER, // OUTPUT
			NetFlow* EMACDCRACK, // OUTPUT
			NetFlow* EMACDCRDBUS, // OUTPUT
			NetFlow* HOSTMIIMRDY, // OUTPUT
			NetFlow* HOSTRDDATA, // OUTPUT
			NetFlow* CLIENTEMAC0DCMLOCKED, // INPUT
			NetFlow* CLIENTEMAC0PAUSEREQ, // INPUT
			NetFlow* CLIENTEMAC0PAUSEVAL, // INPUT
			NetFlow* CLIENTEMAC0RXCLIENTCLKIN, // INPUT
			NetFlow* CLIENTEMAC0TXCLIENTCLKIN, // INPUT
			NetFlow* CLIENTEMAC0TXD, // INPUT
			NetFlow* CLIENTEMAC0TXDVLD, // INPUT
			NetFlow* CLIENTEMAC0TXDVLDMSW, // INPUT
			NetFlow* CLIENTEMAC0TXFIRSTBYTE, // INPUT
			NetFlow* CLIENTEMAC0TXGMIIMIICLKIN, // INPUT
			NetFlow* CLIENTEMAC0TXIFGDELAY, // INPUT
			NetFlow* CLIENTEMAC0TXUNDERRUN, // INPUT
			NetFlow* CLIENTEMAC1DCMLOCKED, // INPUT
			NetFlow* CLIENTEMAC1PAUSEREQ, // INPUT
			NetFlow* CLIENTEMAC1PAUSEVAL, // INPUT
			NetFlow* CLIENTEMAC1RXCLIENTCLKIN, // INPUT
			NetFlow* CLIENTEMAC1TXCLIENTCLKIN, // INPUT
			NetFlow* CLIENTEMAC1TXD, // INPUT
			NetFlow* CLIENTEMAC1TXDVLD, // INPUT
			NetFlow* CLIENTEMAC1TXDVLDMSW, // INPUT
			NetFlow* CLIENTEMAC1TXFIRSTBYTE, // INPUT
			NetFlow* CLIENTEMAC1TXGMIIMIICLKIN, // INPUT
			NetFlow* CLIENTEMAC1TXIFGDELAY, // INPUT
			NetFlow* CLIENTEMAC1TXUNDERRUN, // INPUT
			NetFlow* DCREMACABUS, // INPUT
			NetFlow* DCREMACCLK, // INPUT
			NetFlow* DCREMACDBUS, // INPUT
			NetFlow* DCREMACENABLE, // INPUT
			NetFlow* DCREMACREAD, // INPUT
			NetFlow* DCREMACWRITE, // INPUT
			NetFlow* HOSTADDR, // INPUT
			NetFlow* HOSTCLK, // INPUT
			NetFlow* HOSTEMAC1SEL, // INPUT
			NetFlow* HOSTMIIMSEL, // INPUT
			NetFlow* HOSTOPCODE, // INPUT
			NetFlow* HOSTREQ, // INPUT
			NetFlow* HOSTWRDATA, // INPUT
			NetFlow* PHYEMAC0COL, // INPUT
			NetFlow* PHYEMAC0CRS, // INPUT
			NetFlow* PHYEMAC0GTXCLK, // INPUT
			NetFlow* PHYEMAC0MCLKIN, // INPUT
			NetFlow* PHYEMAC0MDIN, // INPUT
			NetFlow* PHYEMAC0MIITXCLK, // INPUT
			NetFlow* PHYEMAC0PHYAD, // INPUT
			NetFlow* PHYEMAC0RXBUFERR, // INPUT
			NetFlow* PHYEMAC0RXBUFSTATUS, // INPUT
			NetFlow* PHYEMAC0RXCHARISCOMMA, // INPUT
			NetFlow* PHYEMAC0RXCHARISK, // INPUT
			NetFlow* PHYEMAC0RXCHECKINGCRC, // INPUT
			NetFlow* PHYEMAC0RXCLK, // INPUT
			NetFlow* PHYEMAC0RXCLKCORCNT, // INPUT
			NetFlow* PHYEMAC0RXCOMMADET, // INPUT
			NetFlow* PHYEMAC0RXD, // INPUT
			NetFlow* PHYEMAC0RXDISPERR, // INPUT
			NetFlow* PHYEMAC0RXDV, // INPUT
			NetFlow* PHYEMAC0RXER, // INPUT
			NetFlow* PHYEMAC0RXLOSSOFSYNC, // INPUT
			NetFlow* PHYEMAC0RXNOTINTABLE, // INPUT
			NetFlow* PHYEMAC0RXRUNDISP, // INPUT
			NetFlow* PHYEMAC0SIGNALDET, // INPUT
			NetFlow* PHYEMAC0TXBUFERR, // INPUT
			NetFlow* PHYEMAC1COL, // INPUT
			NetFlow* PHYEMAC1CRS, // INPUT
			NetFlow* PHYEMAC1GTXCLK, // INPUT
			NetFlow* PHYEMAC1MCLKIN, // INPUT
			NetFlow* PHYEMAC1MDIN, // INPUT
			NetFlow* PHYEMAC1MIITXCLK, // INPUT
			NetFlow* PHYEMAC1PHYAD, // INPUT
			NetFlow* PHYEMAC1RXBUFERR, // INPUT
			NetFlow* PHYEMAC1RXBUFSTATUS, // INPUT
			NetFlow* PHYEMAC1RXCHARISCOMMA, // INPUT
			NetFlow* PHYEMAC1RXCHARISK, // INPUT
			NetFlow* PHYEMAC1RXCHECKINGCRC, // INPUT
			NetFlow* PHYEMAC1RXCLK, // INPUT
			NetFlow* PHYEMAC1RXCLKCORCNT, // INPUT
			NetFlow* PHYEMAC1RXCOMMADET, // INPUT
			NetFlow* PHYEMAC1RXD, // INPUT
			NetFlow* PHYEMAC1RXDISPERR, // INPUT
			NetFlow* PHYEMAC1RXDV, // INPUT
			NetFlow* PHYEMAC1RXER, // INPUT
			NetFlow* PHYEMAC1RXLOSSOFSYNC, // INPUT
			NetFlow* PHYEMAC1RXNOTINTABLE, // INPUT
			NetFlow* PHYEMAC1RXRUNDISP, // INPUT
			NetFlow* PHYEMAC1SIGNALDET, // INPUT
			NetFlow* PHYEMAC1TXBUFERR, // INPUT
			NetFlow* RESET, // INPUT
			NetFlow* TIEEMAC0CONFIGVEC, // INPUT
			NetFlow* TIEEMAC0UNICASTADDR, // INPUT
			NetFlow* TIEEMAC1CONFIGVEC, // INPUT
			NetFlow* TIEEMAC1UNICASTADDR // INPUT
			){
		
			// Assign parameters and ports: 
			//Verilog Parameters:
			this->LOC = LOC; // Default: "UNPLACED"
			//Verilog Ports in definition order:
			this->DCRHOSTDONEIR = DCRHOSTDONEIR; // OUTPUT
			this->EMAC0CLIENTANINTERRUPT = EMAC0CLIENTANINTERRUPT; // OUTPUT
			this->EMAC0CLIENTRXBADFRAME = EMAC0CLIENTRXBADFRAME; // OUTPUT
			this->EMAC0CLIENTRXCLIENTCLKOUT = EMAC0CLIENTRXCLIENTCLKOUT; // OUTPUT
			this->EMAC0CLIENTRXD = EMAC0CLIENTRXD; // OUTPUT
			this->EMAC0CLIENTRXDVLD = EMAC0CLIENTRXDVLD; // OUTPUT
			this->EMAC0CLIENTRXDVLDMSW = EMAC0CLIENTRXDVLDMSW; // OUTPUT
			this->EMAC0CLIENTRXDVREG6 = EMAC0CLIENTRXDVREG6; // OUTPUT
			this->EMAC0CLIENTRXFRAMEDROP = EMAC0CLIENTRXFRAMEDROP; // OUTPUT
			this->EMAC0CLIENTRXGOODFRAME = EMAC0CLIENTRXGOODFRAME; // OUTPUT
			this->EMAC0CLIENTRXSTATS = EMAC0CLIENTRXSTATS; // OUTPUT
			this->EMAC0CLIENTRXSTATSBYTEVLD = EMAC0CLIENTRXSTATSBYTEVLD; // OUTPUT
			this->EMAC0CLIENTRXSTATSVLD = EMAC0CLIENTRXSTATSVLD; // OUTPUT
			this->EMAC0CLIENTTXACK = EMAC0CLIENTTXACK; // OUTPUT
			this->EMAC0CLIENTTXCLIENTCLKOUT = EMAC0CLIENTTXCLIENTCLKOUT; // OUTPUT
			this->EMAC0CLIENTTXCOLLISION = EMAC0CLIENTTXCOLLISION; // OUTPUT
			this->EMAC0CLIENTTXGMIIMIICLKOUT = EMAC0CLIENTTXGMIIMIICLKOUT; // OUTPUT
			this->EMAC0CLIENTTXRETRANSMIT = EMAC0CLIENTTXRETRANSMIT; // OUTPUT
			this->EMAC0CLIENTTXSTATS = EMAC0CLIENTTXSTATS; // OUTPUT
			this->EMAC0CLIENTTXSTATSBYTEVLD = EMAC0CLIENTTXSTATSBYTEVLD; // OUTPUT
			this->EMAC0CLIENTTXSTATSVLD = EMAC0CLIENTTXSTATSVLD; // OUTPUT
			this->EMAC0PHYENCOMMAALIGN = EMAC0PHYENCOMMAALIGN; // OUTPUT
			this->EMAC0PHYLOOPBACKMSB = EMAC0PHYLOOPBACKMSB; // OUTPUT
			this->EMAC0PHYMCLKOUT = EMAC0PHYMCLKOUT; // OUTPUT
			this->EMAC0PHYMDOUT = EMAC0PHYMDOUT; // OUTPUT
			this->EMAC0PHYMDTRI = EMAC0PHYMDTRI; // OUTPUT
			this->EMAC0PHYMGTRXRESET = EMAC0PHYMGTRXRESET; // OUTPUT
			this->EMAC0PHYMGTTXRESET = EMAC0PHYMGTTXRESET; // OUTPUT
			this->EMAC0PHYPOWERDOWN = EMAC0PHYPOWERDOWN; // OUTPUT
			this->EMAC0PHYSYNCACQSTATUS = EMAC0PHYSYNCACQSTATUS; // OUTPUT
			this->EMAC0PHYTXCHARDISPMODE = EMAC0PHYTXCHARDISPMODE; // OUTPUT
			this->EMAC0PHYTXCHARDISPVAL = EMAC0PHYTXCHARDISPVAL; // OUTPUT
			this->EMAC0PHYTXCHARISK = EMAC0PHYTXCHARISK; // OUTPUT
			this->EMAC0PHYTXCLK = EMAC0PHYTXCLK; // OUTPUT
			this->EMAC0PHYTXD = EMAC0PHYTXD; // OUTPUT
			this->EMAC0PHYTXEN = EMAC0PHYTXEN; // OUTPUT
			this->EMAC0PHYTXER = EMAC0PHYTXER; // OUTPUT
			this->EMAC1CLIENTANINTERRUPT = EMAC1CLIENTANINTERRUPT; // OUTPUT
			this->EMAC1CLIENTRXBADFRAME = EMAC1CLIENTRXBADFRAME; // OUTPUT
			this->EMAC1CLIENTRXCLIENTCLKOUT = EMAC1CLIENTRXCLIENTCLKOUT; // OUTPUT
			this->EMAC1CLIENTRXD = EMAC1CLIENTRXD; // OUTPUT
			this->EMAC1CLIENTRXDVLD = EMAC1CLIENTRXDVLD; // OUTPUT
			this->EMAC1CLIENTRXDVLDMSW = EMAC1CLIENTRXDVLDMSW; // OUTPUT
			this->EMAC1CLIENTRXDVREG6 = EMAC1CLIENTRXDVREG6; // OUTPUT
			this->EMAC1CLIENTRXFRAMEDROP = EMAC1CLIENTRXFRAMEDROP; // OUTPUT
			this->EMAC1CLIENTRXGOODFRAME = EMAC1CLIENTRXGOODFRAME; // OUTPUT
			this->EMAC1CLIENTRXSTATS = EMAC1CLIENTRXSTATS; // OUTPUT
			this->EMAC1CLIENTRXSTATSBYTEVLD = EMAC1CLIENTRXSTATSBYTEVLD; // OUTPUT
			this->EMAC1CLIENTRXSTATSVLD = EMAC1CLIENTRXSTATSVLD; // OUTPUT
			this->EMAC1CLIENTTXACK = EMAC1CLIENTTXACK; // OUTPUT
			this->EMAC1CLIENTTXCLIENTCLKOUT = EMAC1CLIENTTXCLIENTCLKOUT; // OUTPUT
			this->EMAC1CLIENTTXCOLLISION = EMAC1CLIENTTXCOLLISION; // OUTPUT
			this->EMAC1CLIENTTXGMIIMIICLKOUT = EMAC1CLIENTTXGMIIMIICLKOUT; // OUTPUT
			this->EMAC1CLIENTTXRETRANSMIT = EMAC1CLIENTTXRETRANSMIT; // OUTPUT
			this->EMAC1CLIENTTXSTATS = EMAC1CLIENTTXSTATS; // OUTPUT
			this->EMAC1CLIENTTXSTATSBYTEVLD = EMAC1CLIENTTXSTATSBYTEVLD; // OUTPUT
			this->EMAC1CLIENTTXSTATSVLD = EMAC1CLIENTTXSTATSVLD; // OUTPUT
			this->EMAC1PHYENCOMMAALIGN = EMAC1PHYENCOMMAALIGN; // OUTPUT
			this->EMAC1PHYLOOPBACKMSB = EMAC1PHYLOOPBACKMSB; // OUTPUT
			this->EMAC1PHYMCLKOUT = EMAC1PHYMCLKOUT; // OUTPUT
			this->EMAC1PHYMDOUT = EMAC1PHYMDOUT; // OUTPUT
			this->EMAC1PHYMDTRI = EMAC1PHYMDTRI; // OUTPUT
			this->EMAC1PHYMGTRXRESET = EMAC1PHYMGTRXRESET; // OUTPUT
			this->EMAC1PHYMGTTXRESET = EMAC1PHYMGTTXRESET; // OUTPUT
			this->EMAC1PHYPOWERDOWN = EMAC1PHYPOWERDOWN; // OUTPUT
			this->EMAC1PHYSYNCACQSTATUS = EMAC1PHYSYNCACQSTATUS; // OUTPUT
			this->EMAC1PHYTXCHARDISPMODE = EMAC1PHYTXCHARDISPMODE; // OUTPUT
			this->EMAC1PHYTXCHARDISPVAL = EMAC1PHYTXCHARDISPVAL; // OUTPUT
			this->EMAC1PHYTXCHARISK = EMAC1PHYTXCHARISK; // OUTPUT
			this->EMAC1PHYTXCLK = EMAC1PHYTXCLK; // OUTPUT
			this->EMAC1PHYTXD = EMAC1PHYTXD; // OUTPUT
			this->EMAC1PHYTXEN = EMAC1PHYTXEN; // OUTPUT
			this->EMAC1PHYTXER = EMAC1PHYTXER; // OUTPUT
			this->EMACDCRACK = EMACDCRACK; // OUTPUT
			this->EMACDCRDBUS = EMACDCRDBUS; // OUTPUT
			this->HOSTMIIMRDY = HOSTMIIMRDY; // OUTPUT
			this->HOSTRDDATA = HOSTRDDATA; // OUTPUT
			this->CLIENTEMAC0DCMLOCKED = CLIENTEMAC0DCMLOCKED; // INPUT
			this->CLIENTEMAC0PAUSEREQ = CLIENTEMAC0PAUSEREQ; // INPUT
			this->CLIENTEMAC0PAUSEVAL = CLIENTEMAC0PAUSEVAL; // INPUT
			this->CLIENTEMAC0RXCLIENTCLKIN = CLIENTEMAC0RXCLIENTCLKIN; // INPUT
			this->CLIENTEMAC0TXCLIENTCLKIN = CLIENTEMAC0TXCLIENTCLKIN; // INPUT
			this->CLIENTEMAC0TXD = CLIENTEMAC0TXD; // INPUT
			this->CLIENTEMAC0TXDVLD = CLIENTEMAC0TXDVLD; // INPUT
			this->CLIENTEMAC0TXDVLDMSW = CLIENTEMAC0TXDVLDMSW; // INPUT
			this->CLIENTEMAC0TXFIRSTBYTE = CLIENTEMAC0TXFIRSTBYTE; // INPUT
			this->CLIENTEMAC0TXGMIIMIICLKIN = CLIENTEMAC0TXGMIIMIICLKIN; // INPUT
			this->CLIENTEMAC0TXIFGDELAY = CLIENTEMAC0TXIFGDELAY; // INPUT
			this->CLIENTEMAC0TXUNDERRUN = CLIENTEMAC0TXUNDERRUN; // INPUT
			this->CLIENTEMAC1DCMLOCKED = CLIENTEMAC1DCMLOCKED; // INPUT
			this->CLIENTEMAC1PAUSEREQ = CLIENTEMAC1PAUSEREQ; // INPUT
			this->CLIENTEMAC1PAUSEVAL = CLIENTEMAC1PAUSEVAL; // INPUT
			this->CLIENTEMAC1RXCLIENTCLKIN = CLIENTEMAC1RXCLIENTCLKIN; // INPUT
			this->CLIENTEMAC1TXCLIENTCLKIN = CLIENTEMAC1TXCLIENTCLKIN; // INPUT
			this->CLIENTEMAC1TXD = CLIENTEMAC1TXD; // INPUT
			this->CLIENTEMAC1TXDVLD = CLIENTEMAC1TXDVLD; // INPUT
			this->CLIENTEMAC1TXDVLDMSW = CLIENTEMAC1TXDVLDMSW; // INPUT
			this->CLIENTEMAC1TXFIRSTBYTE = CLIENTEMAC1TXFIRSTBYTE; // INPUT
			this->CLIENTEMAC1TXGMIIMIICLKIN = CLIENTEMAC1TXGMIIMIICLKIN; // INPUT
			this->CLIENTEMAC1TXIFGDELAY = CLIENTEMAC1TXIFGDELAY; // INPUT
			this->CLIENTEMAC1TXUNDERRUN = CLIENTEMAC1TXUNDERRUN; // INPUT
			this->DCREMACABUS = DCREMACABUS; // INPUT
			this->DCREMACCLK = DCREMACCLK; // INPUT
			this->DCREMACDBUS = DCREMACDBUS; // INPUT
			this->DCREMACENABLE = DCREMACENABLE; // INPUT
			this->DCREMACREAD = DCREMACREAD; // INPUT
			this->DCREMACWRITE = DCREMACWRITE; // INPUT
			this->HOSTADDR = HOSTADDR; // INPUT
			this->HOSTCLK = HOSTCLK; // INPUT
			this->HOSTEMAC1SEL = HOSTEMAC1SEL; // INPUT
			this->HOSTMIIMSEL = HOSTMIIMSEL; // INPUT
			this->HOSTOPCODE = HOSTOPCODE; // INPUT
			this->HOSTREQ = HOSTREQ; // INPUT
			this->HOSTWRDATA = HOSTWRDATA; // INPUT
			this->PHYEMAC0COL = PHYEMAC0COL; // INPUT
			this->PHYEMAC0CRS = PHYEMAC0CRS; // INPUT
			this->PHYEMAC0GTXCLK = PHYEMAC0GTXCLK; // INPUT
			this->PHYEMAC0MCLKIN = PHYEMAC0MCLKIN; // INPUT
			this->PHYEMAC0MDIN = PHYEMAC0MDIN; // INPUT
			this->PHYEMAC0MIITXCLK = PHYEMAC0MIITXCLK; // INPUT
			this->PHYEMAC0PHYAD = PHYEMAC0PHYAD; // INPUT
			this->PHYEMAC0RXBUFERR = PHYEMAC0RXBUFERR; // INPUT
			this->PHYEMAC0RXBUFSTATUS = PHYEMAC0RXBUFSTATUS; // INPUT
			this->PHYEMAC0RXCHARISCOMMA = PHYEMAC0RXCHARISCOMMA; // INPUT
			this->PHYEMAC0RXCHARISK = PHYEMAC0RXCHARISK; // INPUT
			this->PHYEMAC0RXCHECKINGCRC = PHYEMAC0RXCHECKINGCRC; // INPUT
			this->PHYEMAC0RXCLK = PHYEMAC0RXCLK; // INPUT
			this->PHYEMAC0RXCLKCORCNT = PHYEMAC0RXCLKCORCNT; // INPUT
			this->PHYEMAC0RXCOMMADET = PHYEMAC0RXCOMMADET; // INPUT
			this->PHYEMAC0RXD = PHYEMAC0RXD; // INPUT
			this->PHYEMAC0RXDISPERR = PHYEMAC0RXDISPERR; // INPUT
			this->PHYEMAC0RXDV = PHYEMAC0RXDV; // INPUT
			this->PHYEMAC0RXER = PHYEMAC0RXER; // INPUT
			this->PHYEMAC0RXLOSSOFSYNC = PHYEMAC0RXLOSSOFSYNC; // INPUT
			this->PHYEMAC0RXNOTINTABLE = PHYEMAC0RXNOTINTABLE; // INPUT
			this->PHYEMAC0RXRUNDISP = PHYEMAC0RXRUNDISP; // INPUT
			this->PHYEMAC0SIGNALDET = PHYEMAC0SIGNALDET; // INPUT
			this->PHYEMAC0TXBUFERR = PHYEMAC0TXBUFERR; // INPUT
			this->PHYEMAC1COL = PHYEMAC1COL; // INPUT
			this->PHYEMAC1CRS = PHYEMAC1CRS; // INPUT
			this->PHYEMAC1GTXCLK = PHYEMAC1GTXCLK; // INPUT
			this->PHYEMAC1MCLKIN = PHYEMAC1MCLKIN; // INPUT
			this->PHYEMAC1MDIN = PHYEMAC1MDIN; // INPUT
			this->PHYEMAC1MIITXCLK = PHYEMAC1MIITXCLK; // INPUT
			this->PHYEMAC1PHYAD = PHYEMAC1PHYAD; // INPUT
			this->PHYEMAC1RXBUFERR = PHYEMAC1RXBUFERR; // INPUT
			this->PHYEMAC1RXBUFSTATUS = PHYEMAC1RXBUFSTATUS; // INPUT
			this->PHYEMAC1RXCHARISCOMMA = PHYEMAC1RXCHARISCOMMA; // INPUT
			this->PHYEMAC1RXCHARISK = PHYEMAC1RXCHARISK; // INPUT
			this->PHYEMAC1RXCHECKINGCRC = PHYEMAC1RXCHECKINGCRC; // INPUT
			this->PHYEMAC1RXCLK = PHYEMAC1RXCLK; // INPUT
			this->PHYEMAC1RXCLKCORCNT = PHYEMAC1RXCLKCORCNT; // INPUT
			this->PHYEMAC1RXCOMMADET = PHYEMAC1RXCOMMADET; // INPUT
			this->PHYEMAC1RXD = PHYEMAC1RXD; // INPUT
			this->PHYEMAC1RXDISPERR = PHYEMAC1RXDISPERR; // INPUT
			this->PHYEMAC1RXDV = PHYEMAC1RXDV; // INPUT
			this->PHYEMAC1RXER = PHYEMAC1RXER; // INPUT
			this->PHYEMAC1RXLOSSOFSYNC = PHYEMAC1RXLOSSOFSYNC; // INPUT
			this->PHYEMAC1RXNOTINTABLE = PHYEMAC1RXNOTINTABLE; // INPUT
			this->PHYEMAC1RXRUNDISP = PHYEMAC1RXRUNDISP; // INPUT
			this->PHYEMAC1SIGNALDET = PHYEMAC1SIGNALDET; // INPUT
			this->PHYEMAC1TXBUFERR = PHYEMAC1TXBUFERR; // INPUT
			this->RESET = RESET; // INPUT
			this->TIEEMAC0CONFIGVEC = TIEEMAC0CONFIGVEC; // INPUT
			this->TIEEMAC0UNICASTADDR = TIEEMAC0UNICASTADDR; // INPUT
			this->TIEEMAC1CONFIGVEC = TIEEMAC1CONFIGVEC; // INPUT
			this->TIEEMAC1UNICASTADDR = TIEEMAC1UNICASTADDR; // INPUT
		
			register_wait_on_event_nets();
		
		}
		
		void register_wait_on_event_nets(){
		// TODO
		}
		void calculate(int time){
		// TODO
		}
	};
	

}
